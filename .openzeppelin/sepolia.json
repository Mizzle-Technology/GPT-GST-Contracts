{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8f5aD718D2E516401552bda1bD4966FF52B6B5C3",
      "txHash": "0x0c8a112d77d25ca6e831b9cfb895e601cc33d07e20389b00ce1f6e03be370312",
      "remoteDeploymentId": "8bb90b73-20d2-4423-a665-431d2f641e44",
      "kind": "uups"
    },
    {
      "address": "0xb6CA571B88e7FfEFd8217d4E1457A9f0E1d3B5A6",
      "txHash": "0x7790810e652e82b4ea83fd360f32a09b44d8152de0bb306872f0a22df330f45b",
      "remoteDeploymentId": "5ed55d26-2171-4743-8044-121c51900887",
      "kind": "uups"
    },
    {
      "address": "0x8f4dFC5d5E6e96c65d5BfdFef381eCa61727124f",
      "txHash": "0xed2820ad576ca0504033d18ad94eba012f1ef6127e4a07fd672c9380074190cb",
      "remoteDeploymentId": "d9e63074-0f11-4375-936a-4b7be1d26dc3",
      "kind": "uups"
    },
    {
      "address": "0x42de73c2a5a8E125871Eae2a640f9D1ed4Ae7A96",
      "txHash": "0x13ed4e3bc49c9f557be3e6e5fb82b1f8ce5a2c82e4f7984876971642b95cf94d",
      "remoteDeploymentId": "3e06b527-4c31-40d0-918c-2f83b6751599",
      "kind": "uups"
    },
    {
      "address": "0xBDb76d76EA4A1960FcE86FAf0C77593DA9b03a13",
      "txHash": "0x0ee0a849c5791869d0dfccb78ad8c6b70917c9d80bec475513b2ffa4656d756c",
      "remoteDeploymentId": "28ce32e2-1c44-43a2-b903-a8314182a17f",
      "kind": "uups"
    }
  ],
  "impls": {
    "fa0be06d2a7d36c3b3059323012fa13c1b45ff1cb7b94efeb6a2fcc9ce2bb1b2": {
      "address": "0x8c555801D9F8869C52CeddE327B305B1736F7734",
      "txHash": "0xaef3d50c9f7a21d4c2fe9cf44795c432723d23547bc505425e26ed28c2cf0c0f",
      "remoteDeploymentId": "b8844141-2988-46a1-a50b-69f03ce11b74",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GoldPackToken",
            "src": "contracts/tokens/GoldPackToken.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)70_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)80_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)973_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)401_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)792_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)197_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)846_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)910_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)70_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "89df8ae5266f2129dc172a6ef6644cbb6d5713aa509448d583e7cc2d304335ec": {
      "address": "0x4fBBe80513b13742d9816e333a0eb5430Fab92DA",
      "txHash": "0x523f256d94774f99dbdd9d689f2d39780028c950e20972b56b51d16dfbf28d03",
      "remoteDeploymentId": "fe18fc40-c71d-42a1-a3fb-d3637a7b8c39",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "TradingVault",
            "src": "contracts/vaults/TradingVault.sol:51"
          },
          {
            "label": "safeWallet",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "TradingVault",
            "src": "contracts/vaults/TradingVault.sol:65"
          },
          {
            "label": "WITHDRAWAL_THRESHOLD",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "TradingVault",
            "src": "contracts/vaults/TradingVault.sol:67"
          },
          {
            "label": "withdrawalRequests",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_bytes32,t_struct(WithdrawalRequest)15557_storage)",
            "contract": "TradingVault",
            "src": "contracts/vaults/TradingVault.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)70_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)80_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)197_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)759_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)823_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)70_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_bytes32,t_struct(WithdrawalRequest)15557_storage)": {
            "label": "mapping(bytes32 => struct TradingVault.WithdrawalRequest)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawalRequest)15557_storage": {
            "label": "struct TradingVault.WithdrawalRequest",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "transfer_to",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expiry",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "requestTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 1,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8fb8cd03bbdb92d37a855d52febab3693c40f75c450a42937de10504c0254517": {
      "address": "0x08998951E541b2BdDe83813F896E2ab66269Ef99",
      "txHash": "0xdf0c4321d6caae19aa11e3bc5e833e2ffec16821ccf78c1a2a943c175f4471c1",
      "remoteDeploymentId": "aa858e66-3b24-497c-8997-65e9dd7a2cc6",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:61"
          },
          {
            "label": "trustedSigner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:65"
          },
          {
            "label": "gptToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(GoldPackToken)14300",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:67"
          },
          {
            "label": "tradingVault",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(TradingVault)16282",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:69"
          },
          {
            "label": "goldPriceFeed",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:71"
          },
          {
            "label": "acceptedTokens",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(TokenConfig)12120_storage)",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:73"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_struct(Round)12135_storage)",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:75"
          },
          {
            "label": "whitelistedAddresses",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:77"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:79"
          },
          {
            "label": "roundList",
            "offset": 0,
            "slot": "9",
            "type": "t_struct(LinkedList)9676_storage",
            "contract": "SalesContract",
            "src": "contracts/sales/SalesContract.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)70_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)80_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)759_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)823_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)70_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(GoldPackToken)14300": {
            "label": "contract GoldPackToken",
            "numberOfBytes": "20"
          },
          "t_contract(TradingVault)16282": {
            "label": "contract TradingVault",
            "numberOfBytes": "20"
          },
          "t_enum(SaleStage)12159": {
            "label": "enum ISalesContract.SaleStage",
            "members": ["PreMarketing", "PreSale", "PublicSale", "SaleEnded"],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(TokenConfig)12120_storage)": {
            "label": "mapping(address => struct ISalesContract.TokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Node)9659_storage)": {
            "label": "mapping(bytes32 => struct LinkedMap.Node)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Round)12135_storage)": {
            "label": "mapping(bytes32 => struct ISalesContract.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(LinkedList)9676_storage": {
            "label": "struct LinkedMap.LinkedList",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_bytes32,t_struct(Node)9659_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "head",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tail",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)50_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "1728"
          },
          "t_struct(Node)9659_storage": {
            "label": "struct LinkedMap.Node",
            "members": [
              {
                "label": "prev",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)12135_storage": {
            "label": "struct ISalesContract.Round",
            "members": [
              {
                "label": "maxTokens",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stage",
                "type": "t_enum(SaleStage)12159",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(TokenConfig)12120_storage": {
            "label": "struct ISalesContract.TokenConfig",
            "members": [
              {
                "label": "isAccepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "priceFeed",
                "type": "t_contract(AggregatorV3Interface)45",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "353a198a4c4c19b3c05d0423764632fe87bbeb0cd6b143618bdae19070658de9": {
      "address": "0x767Bd6Aa2745Ba34A3727CB711723bDd0fC9430A",
      "txHash": "0xe3740005e0d25467b1a3963a581fc0f9e1d71fd143ecfa9e1fd0725b0df3a3f3",
      "remoteDeploymentId": "62705226-9aa8-4f3e-b657-bc16e76b5a69",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "BurnVault",
            "src": "contracts/vaults/BurnVault.sol:57"
          },
          {
            "label": "deposits",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_address,t_struct(Deposit)14677_storage)",
            "contract": "BurnVault",
            "src": "contracts/vaults/BurnVault.sol:68"
          },
          {
            "label": "acceptedTokens",
            "offset": 0,
            "slot": "51",
            "type": "t_struct(AddressSet)9128_storage",
            "contract": "BurnVault",
            "src": "contracts/vaults/BurnVault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)70_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)80_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)197_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)759_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)823_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)70_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_struct(Deposit)14677_storage)": {
            "label": "mapping(address => struct BurnVault.Deposit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)9128_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8813_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Deposit)14677_storage": {
            "label": "struct BurnVault.Deposit",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)8813_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1ab365396926fad54e4a2685fd3b9453bdce942479f46a585ac6aff655780132": {
      "address": "0xfFf19552A6b3f36674a740FAA69014ddE51C1404",
      "txHash": "0x9d4231fde39ad63f8c740b7987aedd99b8b0fea07faa7007719ef3a99bef6ab5",
      "remoteDeploymentId": "202a399c-7783-43a8-a4ec-313fb98a3bae",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:45"
          },
          {
            "label": "shareholderAddresses",
            "offset": 0,
            "slot": "51",
            "type": "t_struct(AddressSet)9128_storage",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:47"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "53",
            "type": "t_struct(AddressSet)9128_storage",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:49"
          },
          {
            "label": "distributionList",
            "offset": 0,
            "slot": "55",
            "type": "t_struct(LinkedList)9676_storage",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:51"
          },
          {
            "label": "shareholders",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_struct(Shareholder)10826_storage)",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:54"
          },
          {
            "label": "supportTokens",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:56"
          },
          {
            "label": "distributions",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_struct(Distribution)10838_storage)",
            "contract": "RewardDistribution",
            "src": "contracts/rewards/RewardDistribution.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)70_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)80_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)197_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)759_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)823_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)70_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_struct(Shareholder)10826_storage)": {
            "label": "mapping(address => struct IRewardDistribution.Shareholder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Distribution)10838_storage)": {
            "label": "mapping(bytes32 => struct IRewardDistribution.Distribution)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Node)9659_storage)": {
            "label": "mapping(bytes32 => struct LinkedMap.Node)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)9128_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8813_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Distribution)10838_storage": {
            "label": "struct IRewardDistribution.Distribution",
            "members": [
              {
                "label": "rewardToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "distributionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimed",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LinkedList)9676_storage": {
            "label": "struct LinkedMap.LinkedList",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_bytes32,t_struct(Node)9659_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "head",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tail",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)50_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "1728"
          },
          "t_struct(Node)9659_storage": {
            "label": "struct LinkedMap.Node",
            "members": [
              {
                "label": "prev",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "exists",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)8813_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Shareholder)10826_storage": {
            "label": "struct IRewardDistribution.Shareholder",
            "members": [
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isLocked",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isActivated",
                "type": "t_bool",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
